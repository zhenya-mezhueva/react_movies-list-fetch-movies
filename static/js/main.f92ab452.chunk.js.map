{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/helpers.js","App.js","index.js"],"names":["MovieCard","Title","Plot","Poster","imdbID","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","onAdd","useState","search","setSearch","setMovie","error","setError","getMovieByTitle","a","transformedSearch","split","join","title","fetch","then","response","ok","json","Error","status","statusText","newMovie","Response","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classnames","value","onChange","target","onClick","App","data","setMovies","some","movieFromServer","ReactDOM","render","document","getElementById"],"mappings":"gvEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,YAFuB,MAEhB,GAFgB,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,OAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAI,qCAAgCJ,IAAvC,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,+CCH3BG,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACVC,mBAAS,IADC,mBAC/BC,EAD+B,KACvBC,EADuB,OAEZF,mBAAS,MAFG,mBAE/BL,EAF+B,KAExBQ,EAFwB,OAGZH,oBAAS,GAHG,mBAG/BI,EAH+B,KAGxBC,EAHwB,KAKhCC,EAAe,uCAAG,8BAAAC,EAAA,6DAChBC,EAAoBP,EAAOQ,MAAM,KAAKC,KAAK,KAD3B,SCVHC,EDYYH,ECZHI,MAAM,GAAD,OAHpB,oCAGoB,OAFtB,WAEsB,cAA2BD,IAC7DE,MAAK,SAACC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAGlB,MAAM,IAAIC,MAAJ,UAAaH,EAASI,OAAtB,aAAiCJ,EAASK,gBDI1B,UAII,WAFpBC,EAFgB,QAITC,SAJS,uBAKpBhB,GAAS,GACTF,EAAS,MANW,0BAWlBC,GACFC,GAAS,GAGXF,EAASiB,GACTlB,EAAU,IAhBY,kCCVH,IAAAS,IDUG,OAAH,qDAmBrB,OACE,oCACE,0BACEvB,UAAU,aACVkC,SAAU,SAACC,GACTA,EAAMC,iBACNlB,MAGF,yBAAKlB,UAAU,SACb,2BAAOA,UAAU,QAAQqC,QAAQ,eAAjC,eAIA,yBAAKrC,UAAU,WACb,2BACEsC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZxC,UAAWyC,IAAW,QAAS,CAAE,YAAazB,IAC9C0B,MAAO7B,EACP8B,SAAU,SAAAR,GAAK,OAAIrB,EAAUqB,EAAMS,OAAOF,WAG7C1B,GACC,uBAAGhB,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEsC,KAAK,SACLtC,UAAU,kBACV6C,QAAS3B,GAHX,iBASF,yBAAKlB,UAAU,WACb,4BACEsC,KAAK,SACLtC,UAAU,oBACV6C,QAAS,kBAAMlC,EAAMJ,KAHvB,sBAULA,GACC,yBAAKP,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcO,M,OElFZuC,EAAM,WAAO,IAAD,EACKlC,mBAASmC,GADd,mBAChB1C,EADgB,KACR2C,EADQ,KAavB,OACE,yBAAKhD,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,MAhBA,SAACJ,GACZF,EAAO4C,MAAK,SAAAC,GAAe,OAC7BA,EAAgBzC,SAAWF,EAAME,WAKnCuC,EAAU,GAAD,mBAAK3C,GAAL,CAAaE,WCX1B4C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f92ab452.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  Title,\n  Plot = '',\n  Poster,\n  imdbID,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {Plot}\n        <br />\n        <a href={`https://www.imdb.com/title/${imdbID}`}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  Title: PropTypes.string.isRequired,\n  Plot: PropTypes.string.isRequired,\n  Poster: PropTypes.string.isRequired,\n  imdbID: PropTypes.number.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\nimport classnames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/helpers';\n\nexport const FindMovie = ({ onAdd }) => {\n  const [search, setSearch] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(false);\n\n  const getMovieByTitle = async() => {\n    const transformedSearch = search.split(' ').join('+');\n    const newMovie = await request(transformedSearch);\n\n    if (newMovie.Response === 'False') {\n      setError(true);\n      setMovie(null);\n\n      return;\n    }\n\n    if (error) {\n      setError(false);\n    }\n\n    setMovie(newMovie);\n    setSearch('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          getMovieByTitle();\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classnames('input', { 'is-danger': error })}\n              value={search}\n              onChange={event => setSearch(event.target.value)}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovieByTitle}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => onAdd(movie)}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=';\nconst API_EY = 'b753e75f';\n\nexport const request = title => fetch(`${BASE_URL}${API_EY}&t=${title}`)\n  .then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error(`${response.status}: ${response.statusText}`);\n  });\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (movie) => {\n    if (movies.some(movieFromServer => (\n      movieFromServer.imdbId === movie.imdbId\n    ))) {\n      return;\n    }\n\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}